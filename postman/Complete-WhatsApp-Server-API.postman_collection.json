{
  "info": {
    "_postman_id": "complete-whatsapp-server-api",
    "name": "Complete WhatsApp Server API",
    "description": "Complete API collection for WhatsApp Business Server with authentication, users, organizations, and templates management",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      }
    },
    {
      "name": "API Documentation",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api",
          "host": ["{{baseUrl}}"],
          "path": ["api"]
        }
      }
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login Super Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('accessToken', response.data.accessToken);",
                  "    pm.environment.set('refreshToken', response.data.refreshToken);",
                  "    pm.environment.set('userId', response.data.user.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"superadmin@example.com\",\n    \"password\": \"SuperAdmin123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Login System Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('systemAdminToken', response.data.accessToken);",
                  "    pm.environment.set('systemAdminRefreshToken', response.data.refreshToken);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"systemadmin@example.com\",\n    \"password\": \"SystemAdmin123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            }
          }
        },
        {
          "name": "Validate Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/validate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "validate"]
            }
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('accessToken', response.data.accessToken);",
                  "    pm.environment.set('refreshToken', response.data.refreshToken);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "refresh"]
            }
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"currentPassword\": \"SuperAdmin123!\",\n    \"newPassword\": \"NewSuperAdmin123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "change-password"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        },
        {
          "name": "Logout All Devices",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout-all",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout-all"]
            }
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Create System Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('systemAdminUserId', response.data.user.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"systemadmin@example.com\",\n    \"password\": \"SystemAdmin123!\",\n    \"first_name\": \"System\",\n    \"last_name\": \"Admin\",\n    \"role\": \"system_admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            }
          }
        },
        {
          "name": "Create Organization Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('orgAdminUserId', response.data.user.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"orgadmin@example.com\",\n    \"password\": \"OrgAdmin123!\",\n    \"first_name\": \"Organization\",\n    \"last_name\": \"Admin\",\n    \"role\": \"organization_admin\",\n    \"organization_id\": \"{{organizationId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            }
          }
        },
        {
          "name": "Create Organization User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('orgUserId', response.data.user.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"orguser@example.com\",\n    \"password\": \"OrgUser123!\",\n    \"first_name\": \"Organization\",\n    \"last_name\": \"User\",\n    \"role\": \"organization_user\",\n    \"organization_id\": \"{{organizationId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{orgAdminUserId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{orgAdminUserId}}"]
            }
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"first_name\": \"Updated Organization\",\n    \"last_name\": \"Admin\",\n    \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{orgAdminUserId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{orgAdminUserId}}"]
            }
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{orgUserId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{orgUserId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Organizations",
      "item": [
        {
          "name": "Get All Organizations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/organizations?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "organizations"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Create Organization",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('organizationId', response.data.organization.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Test Organization\",\n    \"description\": \"A test organization for API testing\",\n    \"whatsapp_business_account_id\": \"123456789\",\n    \"whatsapp_access_token\": \"test_access_token_12345\",\n    \"whatsapp_phone_number_id\": \"987654321\",\n    \"whatsapp_webhook_verify_token\": \"webhook_verify_token_123\",\n    \"whatsapp_webhook_url\": \"https://example.com/webhook\",\n    \"whatsapp_app_id\": \"app_id_123\",\n    \"whatsapp_app_secret\": \"app_secret_456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/organizations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "organizations"]
            }
          }
        },
        {
          "name": "Get Organization by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/organizations/{{organizationId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "organizations", "{{organizationId}}"]
            }
          }
        },
        {
          "name": "Update Organization",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Test Organization\",\n    \"description\": \"Updated description for the test organization\",\n    \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/organizations/{{organizationId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "organizations", "{{organizationId}}"]
            }
          }
        },
        {
          "name": "Get Organization Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/organizations/{{organizationId}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "organizations", "{{organizationId}}", "users"]
            }
          }
        },
        {
          "name": "Update WhatsApp Config",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"whatsapp_business_account_id\": \"updated_123456789\",\n    \"whatsapp_access_token\": \"updated_test_access_token_12345\",\n    \"whatsapp_phone_number_id\": \"updated_987654321\",\n    \"whatsapp_webhook_verify_token\": \"updated_webhook_verify_token_123\",\n    \"whatsapp_webhook_url\": \"https://updated-example.com/webhook\",\n    \"whatsapp_app_id\": \"updated_app_id_123\",\n    \"whatsapp_app_secret\": \"updated_app_secret_456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/organizations/{{organizationId}}/whatsapp-config",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "organizations",
                "{{organizationId}}",
                "whatsapp-config"
              ]
            }
          }
        },
        {
          "name": "Get WhatsApp Config",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/organizations/{{organizationId}}/whatsapp-config",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "organizations",
                "{{organizationId}}",
                "whatsapp-config"
              ]
            }
          }
        },
        {
          "name": "Delete Organization",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/organizations/{{organizationId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "organizations", "{{organizationId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Templates",
      "item": [
        {
          "name": "Get Organization Templates",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/templates/organization/{{organizationId}}?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "templates",
                "organization",
                "{{organizationId}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": "draft",
                  "disabled": true
                },
                {
                  "key": "category",
                  "value": "MARKETING",
                  "disabled": true
                }
              ]
            }
          }
        },
        {
          "name": "Create Marketing Template",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('templateId', response.data.template.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"welcome_offer\",\n    \"category\": \"MARKETING\",\n    \"language\": \"en\",\n    \"header_type\": \"TEXT\",\n    \"header_text\": \"🎉 Welcome to Our Store!\",\n    \"body_text\": \"Hi {{1}}, welcome to our store! Get {{2}}% off your first purchase with code WELCOME{{3}}. Valid until {{4}}.\",\n    \"footer_text\": \"Terms and conditions apply\",\n    \"components\": [\n        {\n            \"type\": \"HEADER\",\n            \"format\": \"TEXT\",\n            \"text\": \"🎉 Welcome to Our Store!\"\n        },\n        {\n            \"type\": \"BODY\",\n            \"text\": \"Hi {{1}}, welcome to our store! Get {{2}}% off your first purchase with code WELCOME{{3}}. Valid until {{4}}.\",\n            \"example\": {\n                \"body_text\": [\n                    [\"John\", \"20\", \"2024\", \"Dec 31, 2024\"]\n                ]\n            }\n        },\n        {\n            \"type\": \"FOOTER\",\n            \"text\": \"Terms and conditions apply\"\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/templates/organization/{{organizationId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "templates", "organization", "{{organizationId}}"]
            }
          }
        },
        {
          "name": "Create Authentication Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"otp_verification\",\n    \"category\": \"AUTHENTICATION\",\n    \"language\": \"en\",\n    \"body_text\": \"Your verification code is {{1}}. This code will expire in {{2}} minutes. Do not share this code with anyone.\",\n    \"components\": [\n        {\n            \"type\": \"BODY\",\n            \"text\": \"Your verification code is {{1}}. This code will expire in {{2}} minutes. Do not share this code with anyone.\",\n            \"example\": {\n                \"body_text\": [\n                    [\"123456\", \"5\"]\n                ]\n            }\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/templates/organization/{{organizationId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "templates", "organization", "{{organizationId}}"]
            }
          }
        },
        {
          "name": "Create Utility Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"order_confirmation\",\n    \"category\": \"UTILITY\",\n    \"language\": \"en\",\n    \"header_type\": \"TEXT\",\n    \"header_text\": \"Order Confirmed\",\n    \"body_text\": \"Hi {{1}}, your order #{{2}} has been confirmed. Total amount: ${{3}}. Estimated delivery: {{4}}.\",\n    \"footer_text\": \"Track your order on our website\",\n    \"components\": [\n        {\n            \"type\": \"HEADER\",\n            \"format\": \"TEXT\",\n            \"text\": \"Order Confirmed\"\n        },\n        {\n            \"type\": \"BODY\",\n            \"text\": \"Hi {{1}}, your order #{{2}} has been confirmed. Total amount: ${{3}}. Estimated delivery: {{4}}.\",\n            \"example\": {\n                \"body_text\": [\n                    [\"Sarah\", \"ORD123456\", \"99.99\", \"Dec 25, 2024\"]\n                ]\n            }\n        },\n        {\n            \"type\": \"FOOTER\",\n            \"text\": \"Track your order on our website\"\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/templates/organization/{{organizationId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "templates", "organization", "{{organizationId}}"]
            }
          }
        },
        {
          "name": "Get Template by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/templates/{{templateId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "templates", "{{templateId}}"]
            }
          }
        },
        {
          "name": "Update Template",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"body_text\": \"Hi {{1}}, welcome to our store! Get {{2}}% off your first purchase with code WELCOME{{3}}. Valid until {{4}}. Free shipping on orders over $50!\",\n    \"footer_text\": \"Terms and conditions apply. Offer expires soon!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/templates/{{templateId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "templates", "{{templateId}}"]
            }
          }
        },
        {
          "name": "Submit Template for Approval",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('pendingTemplateId', response.data.template.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/templates/{{templateId}}/submit-approval",
              "host": ["{{baseUrl}}"],
              "path": ["api", "templates", "{{templateId}}", "submit-approval"]
            }
          }
        },
        {
          "name": "Get Pending Approval Templates",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/templates/pending-approval",
              "host": ["{{baseUrl}}"],
              "path": ["api", "templates", "pending-approval"]
            }
          }
        },
        {
          "name": "Approve Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/templates/{{pendingTemplateId}}/approve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "templates", "{{pendingTemplateId}}", "approve"]
            }
          }
        },
        {
          "name": "Reject Template",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"rejection_reason\": \"Template content does not comply with WhatsApp Business API guidelines. Please review the messaging policy and resubmit.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/templates/{{pendingTemplateId}}/reject",
              "host": ["{{baseUrl}}"],
              "path": ["api", "templates", "{{pendingTemplateId}}", "reject"]
            }
          }
        },
        {
          "name": "Sync Templates from WhatsApp API",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    console.log('Sync Results:', response.data);",
                  "    ",
                  "    // Save first synced template ID if available",
                  "    if (response.data.templates && response.data.templates.length > 0) {",
                  "        const firstTemplate = response.data.templates[0].template;",
                  "        pm.environment.set('syncedTemplateId', firstTemplate.id);",
                  "        console.log('Saved synced template ID:', firstTemplate.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/templates/organization/{{organizationId}}/sync-whatsapp",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "templates",
                "organization",
                "{{organizationId}}",
                "sync-whatsapp"
              ]
            }
          }
        },
        {
          "name": "Delete Template",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/templates/{{templateId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "templates", "{{templateId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Campaigns",
      "item": [
        {
          "name": "Get Organization Campaigns",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/organization/{{organizationId}}?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "campaigns",
                "organization",
                "{{organizationId}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": "draft",
                  "disabled": true
                },
                {
                  "key": "campaign_type",
                  "value": "immediate",
                  "disabled": true
                }
              ]
            }
          }
        },
        {
          "name": "Create Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('campaignId', response.data.campaign.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Welcome Campaign\",\n    \"description\": \"Welcome new customers with special offers\",\n    \"template_id\": \"{{templateId}}\",\n    \"campaign_type\": \"scheduled\",\n    \"buffer_hours\": 48\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/organization/{{organizationId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "organization", "{{organizationId}}"]
            }
          }
        },
        {
          "name": "Get Campaign by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}"]
            }
          }
        },
        {
          "name": "Update Campaign",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"description\": \"Updated welcome campaign with enhanced offers\",\n    \"buffer_hours\": 72\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}"]
            }
          }
        },
        {
          "name": "Add Audience to Campaign",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"audience_list\": [\n        {\n            \"name\": \"John Doe\",\n            \"msisdn\": \"+1234567890\",\n            \"attributes\": {\n                \"account_no\": \"ACC001\",\n                \"city\": \"New York\",\n                \"age\": \"30\"\n            }\n        },\n        {\n            \"name\": \"Jane Smith\",\n            \"msisdn\": \"+1234567891\",\n            \"attributes\": {\n                \"account_no\": \"ACC002\",\n                \"city\": \"Los Angeles\",\n                \"age\": \"25\"\n            }\n        },\n        {\n            \"name\": \"Bob Johnson\",\n            \"msisdn\": \"+1234567892\",\n            \"attributes\": {\n                \"account_no\": \"ACC003\",\n                \"city\": \"Chicago\",\n                \"age\": \"35\"\n            }\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}/audience",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}", "audience"]
            }
          }
        },
        {
          "name": "Get Campaign Audience",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}/audience?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}", "audience"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "message_status",
                  "value": "pending",
                  "disabled": true
                }
              ]
            }
          }
        },
        {
          "name": "Submit Campaign for Approval",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('pendingCampaignId', response.data.campaign.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}/submit-approval",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}", "submit-approval"]
            }
          }
        },
        {
          "name": "Get Pending Approval Campaigns",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/pending-approval",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "pending-approval"]
            }
          }
        },
        {
          "name": "Approve Campaign",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{pendingCampaignId}}/approve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{pendingCampaignId}}", "approve"]
            }
          }
        },
        {
          "name": "Reject Campaign",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"rejection_reason\": \"Campaign content needs review. Please ensure compliance with WhatsApp Business API guidelines.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{pendingCampaignId}}/reject",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{pendingCampaignId}}", "reject"]
            }
          }
        },
        {
          "name": "Start Campaign",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}/start",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}", "start"]
            }
          }
        },
        {
          "name": "Pause Campaign",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}/pause",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}", "pause"]
            }
          }
        },
        {
          "name": "Cancel Campaign",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}", "cancel"]
            }
          }
        },
        {
          "name": "Get Campaign Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/organization/{{organizationId}}/stats",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "campaigns",
                "organization",
                "{{organizationId}}",
                "stats"
              ]
            }
          }
        },
        {
          "name": "Remove Audience from Campaign",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"msisdn\": \"+1234567890\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}/audience",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}", "audience"]
            }
          }
        },
        {
          "name": "Delete Campaign",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/campaigns/{{campaignId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "campaigns", "{{campaignId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Audience",
      "item": [
        {
          "name": "Get Master Audience",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/audience/organization/{{organizationId}}?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "audience", "organization", "{{organizationId}}"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": "John",
                  "disabled": true
                },
                {
                  "key": "country_code",
                  "value": "1",
                  "disabled": true
                }
              ]
            }
          }
        },
        {
          "name": "Create Master Audience Record",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Alice Johnson\",\n    \"msisdn\": \"+1234567893\",\n    \"country_code\": \"1\",\n    \"attributes\": {\n        \"account_no\": \"ACC004\",\n        \"city\": \"Miami\",\n        \"age\": \"28\",\n        \"subscription\": \"premium\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/audience/organization/{{organizationId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "audience", "organization", "{{organizationId}}"]
            }
          }
        },
        {
          "name": "Bulk Create Master Audience",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"audience_list\": [\n        {\n            \"name\": \"Michael Brown\",\n            \"msisdn\": \"+1234567894\",\n            \"attributes\": {\n                \"account_no\": \"ACC005\",\n                \"city\": \"Seattle\",\n                \"age\": \"32\",\n                \"subscription\": \"basic\"\n            }\n        },\n        {\n            \"name\": \"Sarah Wilson\",\n            \"msisdn\": \"+1234567895\",\n            \"attributes\": {\n                \"account_no\": \"ACC006\",\n                \"city\": \"Denver\",\n                \"age\": \"27\",\n                \"subscription\": \"premium\"\n            }\n        },\n        {\n            \"name\": \"David Lee\",\n            \"msisdn\": \"+1234567896\",\n            \"attributes\": {\n                \"account_no\": \"ACC007\",\n                \"city\": \"Austin\",\n                \"age\": \"29\",\n                \"subscription\": \"standard\"\n            }\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/audience/organization/{{organizationId}}/bulk",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "audience",
                "organization",
                "{{organizationId}}",
                "bulk"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Asset Generation Files",
      "item": [
        {
          "name": "Get Organization Asset Files",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/asset-files/organization/{{organizationId}}?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "asset-files",
                "organization",
                "{{organizationId}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "is_active",
                  "value": "true",
                  "disabled": true
                },
                {
                  "key": "template_id",
                  "value": "{{templateId}}",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "generator",
                  "disabled": true
                }
              ]
            }
          }
        },
        {
          "name": "Get Template Asset Files",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/asset-files/template/{{templateId}}?include_inactive=false",
              "host": ["{{baseUrl}}"],
              "path": ["api", "asset-files", "template", "{{templateId}}"],
              "query": [
                {
                  "key": "include_inactive",
                  "value": "false"
                }
              ]
            }
          }
        },
        {
          "name": "Create Asset Generation File",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('assetFileId', response.data.asset_file.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"file_name\": \"personalized_image_generator.py\",\n    \"description\": \"Generates personalized welcome images with customer name and offer details\",\n    \"version\": \"1.0\",\n    \"file_content\": \"# Personalized Image Generator\\nimport os\\nfrom PIL import Image, ImageDraw, ImageFont\\nimport json\\n\\ndef generate_asset(attributes, name, msisdn, temp_dir):\\n    \\\"\\\"\\\"Generate personalized image asset\\\"\\\"\\\"\\n    try:\\n        # Create personalized image\\n        width, height = 800, 400\\n        image = Image.new('RGB', (width, height), color='#f0f8ff')\\n        draw = ImageDraw.Draw(image)\\n        \\n        # Add personalized text\\n        greeting = attributes.get('greeting', 'Hello')\\n        offer = attributes.get('offer', '20% off')\\n        text = f'{greeting} {name}! Get {offer} on your next purchase!'\\n        \\n        try:\\n            font = ImageFont.truetype('arial.ttf', 32)\\n        except:\\n            font = ImageFont.load_default()\\n        \\n        # Center the text\\n        bbox = draw.textbbox((0, 0), text, font=font)\\n        text_width = bbox[2] - bbox[0]\\n        x = (width - text_width) // 2\\n        y = height // 2 - 20\\n        \\n        draw.text((x, y), text, fill='#333333', font=font)\\n        \\n        # Add account info if available\\n        if 'account_no' in attributes:\\n            account_text = f'Account: {attributes[\\\"account_no\\\"]}'\\n            draw.text((50, height - 50), account_text, fill='#666666', font=font)\\n        \\n        # Save image\\n        safe_name = name.replace(' ', '_').replace('/', '_')\\n        image_path = os.path.join(temp_dir, f'welcome_{safe_name}.png')\\n        image.save(image_path)\\n        \\n        return {'image': image_path}\\n    except Exception as e:\\n        print(f'Error generating asset: {e}')\\n        return None\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/asset-files/template/{{templateId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "asset-files", "template", "{{templateId}}"]
            }
          }
        },
        {
          "name": "Update Asset File",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"description\": \"Updated: Generates enhanced personalized welcome images with customer name, offer details, and branding\",\n    \"file_content\": \"# Enhanced Personalized Image Generator\\nimport os\\nfrom PIL import Image, ImageDraw, ImageFont\\nimport json\\n\\ndef generate_asset(attributes, name, msisdn, temp_dir):\\n    \\\"\\\"\\\"Generate enhanced personalized image asset\\\"\\\"\\\"\\n    try:\\n        # Create personalized image with gradient background\\n        width, height = 800, 400\\n        image = Image.new('RGB', (width, height), color='#4a90e2')\\n        draw = ImageDraw.Draw(image)\\n        \\n        # Add gradient effect (simplified)\\n        for y in range(height):\\n            color_value = int(255 * (1 - y / height * 0.3))\\n            draw.line([(0, y), (width, y)], fill=(74, 144, color_value))\\n        \\n        # Add personalized text\\n        greeting = attributes.get('greeting', 'Hello')\\n        offer = attributes.get('offer', '20% off')\\n        city = attributes.get('city', '')\\n        \\n        main_text = f'{greeting} {name}!'\\n        offer_text = f'Exclusive {offer} just for you'\\n        location_text = f'Available in {city}' if city else ''\\n        \\n        try:\\n            title_font = ImageFont.truetype('arial.ttf', 40)\\n            subtitle_font = ImageFont.truetype('arial.ttf', 28)\\n            small_font = ImageFont.truetype('arial.ttf', 20)\\n        except:\\n            title_font = ImageFont.load_default()\\n            subtitle_font = ImageFont.load_default()\\n            small_font = ImageFont.load_default()\\n        \\n        # Draw main text\\n        bbox = draw.textbbox((0, 0), main_text, font=title_font)\\n        text_width = bbox[2] - bbox[0]\\n        x = (width - text_width) // 2\\n        draw.text((x, 100), main_text, fill='white', font=title_font)\\n        \\n        # Draw offer text\\n        bbox = draw.textbbox((0, 0), offer_text, font=subtitle_font)\\n        text_width = bbox[2] - bbox[0]\\n        x = (width - text_width) // 2\\n        draw.text((x, 180), offer_text, fill='#ffeb3b', font=subtitle_font)\\n        \\n        # Draw location if available\\n        if location_text:\\n            bbox = draw.textbbox((0, 0), location_text, font=small_font)\\n            text_width = bbox[2] - bbox[0]\\n            x = (width - text_width) // 2\\n            draw.text((x, 250), location_text, fill='#e0e0e0', font=small_font)\\n        \\n        # Add account info\\n        if 'account_no' in attributes:\\n            account_text = f'Account: {attributes[\\\"account_no\\\"]}'\\n            draw.text((50, height - 50), account_text, fill='white', font=small_font)\\n        \\n        # Save image\\n        safe_name = name.replace(' ', '_').replace('/', '_')\\n        image_path = os.path.join(temp_dir, f'welcome_enhanced_{safe_name}.png')\\n        image.save(image_path)\\n        \\n        return {'image': image_path}\\n    except Exception as e:\\n        print(f'Error generating enhanced asset: {e}')\\n        return None\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/asset-files/{{assetFileId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "asset-files", "{{assetFileId}}"]
            }
          }
        },
        {
          "name": "Create Asset File Version",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('assetFileVersionId', response.data.asset_file.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"file_name\": \"personalized_image_generator.py\",\n    \"description\": \"Version 2.0: Added video generation capability and enhanced personalization\",\n    \"file_content\": \"# Advanced Personalized Asset Generator v2.0\\nimport os\\nfrom PIL import Image, ImageDraw, ImageFont\\nimport json\\n\\ndef generate_asset(attributes, name, msisdn, temp_dir):\\n    \\\"\\\"\\\"Generate multiple personalized assets (image + video thumbnail)\\\"\\\"\\\"\\n    try:\\n        assets = {}\\n        \\n        # Generate personalized image\\n        width, height = 800, 400\\n        image = Image.new('RGB', (width, height), color='#2c3e50')\\n        draw = ImageDraw.Draw(image)\\n        \\n        # Create modern design\\n        # Add header bar\\n        draw.rectangle([(0, 0), (width, 80)], fill='#3498db')\\n        \\n        # Add personalized content\\n        greeting = attributes.get('greeting', 'Welcome')\\n        offer = attributes.get('offer', 'Special Offer')\\n        subscription = attributes.get('subscription', 'standard')\\n        \\n        try:\\n            header_font = ImageFont.truetype('arial.ttf', 24)\\n            title_font = ImageFont.truetype('arial.ttf', 36)\\n            body_font = ImageFont.truetype('arial.ttf', 20)\\n        except:\\n            header_font = ImageFont.load_default()\\n            title_font = ImageFont.load_default()\\n            body_font = ImageFont.load_default()\\n        \\n        # Header text\\n        draw.text((20, 25), f'{greeting}, {name}!', fill='white', font=header_font)\\n        \\n        # Main content\\n        main_text = f'Your {subscription.title()} Benefits'\\n        draw.text((50, 120), main_text, fill='white', font=title_font)\\n        \\n        # Offer details\\n        offer_text = f'🎉 {offer}'\\n        draw.text((50, 180), offer_text, fill='#f39c12', font=body_font)\\n        \\n        # Additional info based on attributes\\n        y_pos = 220\\n        if 'city' in attributes:\\n            city_text = f'📍 Available in {attributes[\\\"city\\\"]}'\\n            draw.text((50, y_pos), city_text, fill='#ecf0f1', font=body_font)\\n            y_pos += 30\\n        \\n        if 'age' in attributes:\\n            age_group = 'Young Professional' if int(attributes.get('age', 25)) < 30 else 'Experienced Professional'\\n            age_text = f'👤 {age_group} Package'\\n            draw.text((50, y_pos), age_text, fill='#ecf0f1', font=body_font)\\n            y_pos += 30\\n        \\n        # Footer\\n        if 'account_no' in attributes:\\n            account_text = f'Account: {attributes[\\\"account_no\\\"]}'\\n            draw.text((20, height - 40), account_text, fill='#95a5a6', font=body_font)\\n        \\n        # Save main image\\n        safe_name = name.replace(' ', '_').replace('/', '_')\\n        image_path = os.path.join(temp_dir, f'personalized_v2_{safe_name}.png')\\n        image.save(image_path)\\n        assets['image'] = image_path\\n        \\n        # Generate thumbnail for video (placeholder)\\n        thumb_image = image.resize((400, 200))\\n        thumb_draw = ImageDraw.Draw(thumb_image)\\n        # Add play button overlay\\n        play_button_size = 40\\n        play_x = (400 - play_button_size) // 2\\n        play_y = (200 - play_button_size) // 2\\n        thumb_draw.ellipse([play_x, play_y, play_x + play_button_size, play_y + play_button_size], fill='rgba(255,255,255,0.8)')\\n        thumb_draw.polygon([play_x + 15, play_y + 10, play_x + 15, play_y + 30, play_x + 30, play_y + 20], fill='#3498db')\\n        \\n        thumb_path = os.path.join(temp_dir, f'video_thumb_{safe_name}.png')\\n        thumb_image.save(thumb_path)\\n        assets['video_thumbnail'] = thumb_path\\n        \\n        return assets\\n    except Exception as e:\\n        print(f'Error generating v2 assets: {e}')\\n        return None\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/asset-files/template/{{templateId}}/version",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "asset-files",
                "template",
                "{{templateId}}",
                "version"
              ]
            }
          }
        },
        {
          "name": "Get File Versions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/asset-files/template/{{templateId}}/versions/personalized_image_generator.py",
              "host": ["{{baseUrl}}"],
              "path": [
                "api",
                "asset-files",
                "template",
                "{{templateId}}",
                "versions",
                "personalized_image_generator.py"
              ]
            }
          }
        },
        {
          "name": "Deactivate Asset File",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/asset-files/{{assetFileId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "asset-files", "{{assetFileId}}"]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000"
    }
  ]
}
